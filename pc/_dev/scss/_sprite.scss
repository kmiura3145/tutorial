// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$sprite-01-name: 'sprite-01';
$sprite-01-x: 0px;
$sprite-01-y: 0px;
$sprite-01-offset-x: 0px;
$sprite-01-offset-y: 0px;
$sprite-01-width: 24px;
$sprite-01-height: 24px;
$sprite-01-total-width: 80px;
$sprite-01-total-height: 52px;
$sprite-01-image: 'html/common/img/sprite.png';
$sprite-01: (0px, 0px, 0px, 0px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-01', );
$sprite-02-name: 'sprite-02';
$sprite-02-x: 28px;
$sprite-02-y: 0px;
$sprite-02-offset-x: -28px;
$sprite-02-offset-y: 0px;
$sprite-02-width: 24px;
$sprite-02-height: 24px;
$sprite-02-total-width: 80px;
$sprite-02-total-height: 52px;
$sprite-02-image: 'html/common/img/sprite.png';
$sprite-02: (28px, 0px, -28px, 0px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-02', );
$sprite-03-name: 'sprite-03';
$sprite-03-x: 0px;
$sprite-03-y: 28px;
$sprite-03-offset-x: 0px;
$sprite-03-offset-y: -28px;
$sprite-03-width: 24px;
$sprite-03-height: 24px;
$sprite-03-total-width: 80px;
$sprite-03-total-height: 52px;
$sprite-03-image: 'html/common/img/sprite.png';
$sprite-03: (0px, 28px, 0px, -28px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-03', );
$sprite-04-name: 'sprite-04';
$sprite-04-x: 28px;
$sprite-04-y: 28px;
$sprite-04-offset-x: -28px;
$sprite-04-offset-y: -28px;
$sprite-04-width: 24px;
$sprite-04-height: 24px;
$sprite-04-total-width: 80px;
$sprite-04-total-height: 52px;
$sprite-04-image: 'html/common/img/sprite.png';
$sprite-04: (28px, 28px, -28px, -28px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-04', );
$sprite-05-name: 'sprite-05';
$sprite-05-x: 56px;
$sprite-05-y: 0px;
$sprite-05-offset-x: -56px;
$sprite-05-offset-y: 0px;
$sprite-05-width: 24px;
$sprite-05-height: 24px;
$sprite-05-total-width: 80px;
$sprite-05-total-height: 52px;
$sprite-05-image: 'html/common/img/sprite.png';
$sprite-05: (56px, 0px, -56px, 0px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-05', );
$sprite-unchecked-name: 'sprite-unchecked';
$sprite-unchecked-x: 56px;
$sprite-unchecked-y: 28px;
$sprite-unchecked-offset-x: -56px;
$sprite-unchecked-offset-y: -28px;
$sprite-unchecked-width: 24px;
$sprite-unchecked-height: 24px;
$sprite-unchecked-total-width: 80px;
$sprite-unchecked-total-height: 52px;
$sprite-unchecked-image: 'html/common/img/sprite.png';
$sprite-unchecked: (56px, 28px, -56px, -28px, 24px, 24px, 80px, 52px, 'html/common/img/sprite.png', 'sprite-unchecked', );
$spritesheet-width: 80px;
$spritesheet-height: 52px;
$spritesheet-image: 'html/common/img/sprite.png';
$spritesheet-sprites: ($sprite-01, $sprite-02, $sprite-03, $sprite-04, $sprite-05, $sprite-unchecked, );
$spritesheet: (80px, 52px, 'html/common/img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
